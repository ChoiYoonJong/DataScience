{"cells":[{"cell_type":"markdown","metadata":{"id":"uq1Fn4rnnmQ7"},"source":["네이버 영화 TOP100 데이터 크롤링하기"]},{"cell_type":"markdown","metadata":{"id":"SK3OTa8cnpuW"},"source":["라이브러리 설치"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4022,"status":"ok","timestamp":1624445304563,"user":{"displayName":"YoonJong Choi","photoUrl":"","userId":"01239558824081167536"},"user_tz":-540},"id":"KJdd-hmXiYbw","outputId":"e0b75e52-6945-4677-9557-7f6066387247"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting selenium\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/80/d6/4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853/selenium-3.141.0-py2.py3-none-any.whl (904kB)\n","\r\u001b[K     |▍                               | 10kB 15.1MB/s eta 0:00:01\r\u001b[K     |▊                               | 20kB 12.5MB/s eta 0:00:01\r\u001b[K     |█                               | 30kB 9.3MB/s eta 0:00:01\r\u001b[K     |█▌                              | 40kB 8.0MB/s eta 0:00:01\r\u001b[K     |█▉                              | 51kB 4.3MB/s eta 0:00:01\r\u001b[K     |██▏                             | 61kB 4.8MB/s eta 0:00:01\r\u001b[K     |██▌                             | 71kB 5.0MB/s eta 0:00:01\r\u001b[K     |███                             | 81kB 5.4MB/s eta 0:00:01\r\u001b[K     |███▎                            | 92kB 5.6MB/s eta 0:00:01\r\u001b[K     |███▋                            | 102kB 4.1MB/s eta 0:00:01\r\u001b[K     |████                            | 112kB 4.1MB/s eta 0:00:01\r\u001b[K     |████▍                           | 122kB 4.1MB/s eta 0:00:01\r\u001b[K     |████▊                           | 133kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████                           | 143kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 153kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████▉                          | 163kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████▏                         | 174kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 184kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 194kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 204kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 215kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████                        | 225kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 235kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████▊                       | 245kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████                       | 256kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 266kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 276kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 286kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████▌                     | 296kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 307kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████▎                    | 317kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████▋                    | 327kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████                    | 337kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 348kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 358kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 368kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 378kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████▊                  | 389kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████▏                 | 399kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 409kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 419kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 430kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████▋                | 440kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████                | 450kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 460kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████▋               | 471kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 481kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 491kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 501kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 512kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████▌             | 522kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 532kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████▏            | 542kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 552kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 563kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 573kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 583kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 593kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 604kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 614kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 624kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 634kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 645kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 655kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 665kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 675kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 686kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████▋       | 696kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 706kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 716kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▊      | 727kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 737kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 747kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 757kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 768kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▌    | 778kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 788kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 798kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 808kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 819kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▍  | 829kB 4.1MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 839kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 849kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 860kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 870kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 880kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 890kB 4.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 901kB 4.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 911kB 4.1MB/s \n","\u001b[?25hRequirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from selenium) (1.24.3)\n","Installing collected packages: selenium\n","Successfully installed selenium-3.141.0\n"]}],"source":["#링크 수집을 위한 라이브러리 설치\n","!pip install selenium"]},{"cell_type":"markdown","metadata":{"id":"WVI1dt51nyHi"},"source":["라이브러리 임포트"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1624445304563,"user":{"displayName":"YoonJong Choi","photoUrl":"","userId":"01239558824081167536"},"user_tz":-540},"id":"Ff3khC1XnwoS"},"outputs":[],"source":["from bs4 import BeautifulSoup\n","import requests\n","from selenium import webdriver as wd\n","from selenium.webdriver.common.keys import Keys\n","import time\n","import re\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"eZU-_kCuoHcR"},"outputs":[{"name":"stdout","output_type":"stream","text":["Hit:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease\n","Ign:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Get:3 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Ign:4 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Get:5 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release [697 B]\n","Hit:6 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Hit:7 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease\n","Hit:8 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:9 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release.gpg [836 B]\n","Get:11 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Hit:12 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Get:13 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease [15.9 kB]\n","Ign:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages\n","Get:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [599 kB]\n","Get:15 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Get:16 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [473 kB]\n","Get:17 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,188 kB]\n","Get:19 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,219 kB]\n","Get:20 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,418 kB]\n","Get:21 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic/main amd64 Packages [40.9 kB]\n","Get:22 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,652 kB]\n","Get:23 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [41.5 kB]\n","Get:24 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [505 kB]\n","Fetched 10.4 MB in 4s (2,573 kB/s)\n","Reading package lists... Done\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg-extra\n","Suggested packages:\n","  webaccounts-chromium-extension unity-chromium-extension\n","The following NEW packages will be installed:\n","  chromium-browser chromium-browser-l10n chromium-chromedriver\n","  chromium-codecs-ffmpeg-extra\n","0 upgraded, 4 newly installed, 0 to remove and 70 not upgraded.\n","Need to get 86.0 MB of archives.\n","After this operation, 298 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-codecs-ffmpeg-extra amd64 91.0.4472.101-0ubuntu0.18.04.1 [1,124 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-browser amd64 91.0.4472.101-0ubuntu0.18.04.1 [76.1 MB]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-browser-l10n all 91.0.4472.101-0ubuntu0.18.04.1 [3,937 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-chromedriver amd64 91.0.4472.101-0ubuntu0.18.04.1 [4,837 kB]\n","Fetched 86.0 MB in 9s (9,314 kB/s)\n","Selecting previously unselected package chromium-codecs-ffmpeg-extra.\n","(Reading database ... 160772 files and directories currently installed.)\n","Preparing to unpack .../chromium-codecs-ffmpeg-extra_91.0.4472.101-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-codecs-ffmpeg-extra (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-browser.\n","Preparing to unpack .../chromium-browser_91.0.4472.101-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-browser (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-browser-l10n.\n","Preparing to unpack .../chromium-browser-l10n_91.0.4472.101-0ubuntu0.18.04.1_all.deb ...\n","Unpacking chromium-browser-l10n (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-chromedriver.\n","Preparing to unpack .../chromium-chromedriver_91.0.4472.101-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-chromedriver (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Setting up chromium-codecs-ffmpeg-extra (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Setting up chromium-browser (91.0.4472.101-0ubuntu0.18.04.1) ...\n","update-alternatives: using /usr/bin/chromium-browser to provide /usr/bin/x-www-browser (x-www-browser) in auto mode\n","update-alternatives: using /usr/bin/chromium-browser to provide /usr/bin/gnome-www-browser (gnome-www-browser) in auto mode\n","Setting up chromium-chromedriver (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Setting up chromium-browser-l10n (91.0.4472.101-0ubuntu0.18.04.1) ...\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Processing triggers for hicolor-icon-theme (0.17-2) ...\n","Processing triggers for mime-support (3.60ubuntu1) ...\n","Processing triggers for libc-bin (2.27-3ubuntu1.2) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","cp: '/usr/lib/chromium-browser/chromedriver' and '/usr/bin/chromedriver' are the same file\n","Requirement already satisfied: selenium in /usr/local/lib/python3.7/dist-packages (3.141.0)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from selenium) (1.24.3)\n"]}],"source":["# install chromium, its driver, and selenium\n","!apt-get update\n","!apt install chromium-chromedriver\n","!cp /usr/lib/chromium-browser/chromedriver /usr/bin\n","!pip install selenium\n","# set options to be headless, ..\n","from selenium import webdriver\n","options = webdriver.ChromeOptions()\n","options.add_argument('--headless')\n","options.add_argument('--no-sandbox')\n","options.add_argument('--disable-dev-shm-usage')\n","\n","driver = webdriver.Chrome('chromedriver',options=options)"]},{"cell_type":"markdown","metadata":{"id":"GmXXetvTsO76"},"source":["분석할 데이터 모으기(크롤링)"]},{"cell_type":"markdown","metadata":{"id":"bP8KsyyqshIM"},"source":["네이버 영화 TOP 100 페이지 별 링크 수집"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"BCje5duNopA-"},"outputs":[],"source":["def getPageLinksWantRange(startPageNo, lastPageNo) :\n","  links = [] # 100개의 영화링크를 수집할 리스트 변수 선언\n","  \n","  for pageNo in range(startPageNo-1, lastPageNo) :\n","    # 실시간 TOP 100 영화 링크 수집\n","    url = 'https://serieson.naver.com/movie/top100List.nhn?rankingTypeCode=PC_M\u0026page=' + str(pageNo+1)\n","\n","    req = requests.get(url) # 페이지 접속\n","    soup = BeautifulSoup(req.text, 'lxml')\n","    # html 파싱(원하는 위치에 있는 값을 찾아줌)을 위한 객체 생성, 불러올 데이터 정보가 lxml형식이다\n","    movielinks = soup.select('div.lst_thum_wrap ul li a[href]')\n","    # 해당페이지의 페이지소스 중 378line 확인\n","    # \u003cdiv class=\"lst_thum_wrap\"\u003e -\u003e \u003cul\u003e -\u003e \u003cli\u003e -\u003e \u003ca href =\"\"\u003e\n","    # div 일종의 박스, 여기 안에 무슨 정보를 넣을 거다\n","    # ul(반복되는 정보) 안에 li가 들어있다(주로 그렇기 때문에 세트로 생각하면 좋다)\n","\n","    # movielinks의 링크는 완전한 형태의 링크가 아니기 때문에 부족한 앞부분을 채워 완전한 링크를 만들어줘야함\n","\n","    for movielink in movielinks :\n","      link = str(movielink.get('href'))\n","\n","      links.append(\"https://series.naver.com\" + link) # 접속가능한 전체링크 형태로 변환하여 links 리스트에 넣어줌\n","      \n","  return links"]},{"cell_type":"markdown","metadata":{"id":"7WUXixPrycvB"},"source":["네이버 영화 제목,평점,장르,줄거리 크롤링"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"diqwJ-_ktCJi"},"outputs":[],"source":["def getMovieDataFromNaverSeries(links):\n","  title_infos = [] # 제목\n","  content_infos = [] # 줄거리\n","  genre_infos = [] # 장르\n","  score_infos = [] # 평점\n","  date_infos = [] # 개봉일\n","\n","  url2 = \"https://www.naver.com\"\n","\n","  driver = webdriver.Chrome('chromedriver', options=options)\n","  driver.get(url2)\n","  time.sleep(3.0) # 3초 sleep\n","\n","  driver.find_element_by_css_selector('body').send_keys(Keys.CONTROL + 't')\n","\n","  for link in links:\n","    print(link + '수집 중.........')\n","    driver.switch_to_window(driver.window_handles[-1]) \n","    time.sleep(0.1)\n","    driver.get(link)\n","    time.sleep(0.1)\n","    driver.switch_to_window(driver.window_handles[0]) # 새창 활성화\n","    time.sleep(3.0)\n","    \n","    html_source = driver.page_source # req.text 같은 동작\n","    html_soup = BeautifulSoup(html_source, 'lxml')\n","\n","    # 청소년관람불가 영화 크롤링 할 경우 -\u003e 인증 -\u003e 수집 제외\n","    flag = html_soup.text[0:10]\n","\n","    newflag =''.join(flag)\n","    newflag = newflag.replace('\\n','')\n","\n","    if newflag =='네이버':\n","      time.sleep(1.0)\n","\n","      #평점 수집\n","      score = driver.find_element_by_css_selector('div.score_area \u003e em')\n","      score = float(score.text)\n","      score = int(score) # 정수형으로 변경\n","      score_infos.append(score)\n","      print(score)\n","\n","      # 장르 수집\n","      genre = driver.find_element_by_css_selector('li.info_lst \u003e ul \u003e li:nth-child(4)').get_attribute('textContent')\n","      genre = genre.replace('장르','')\n","      genre = genre.replace('\\n','')\n","      genre = genre.replace('\\t','')\n","      genre_infos.append(genre)\n","\n","      # 제목, 줄거리\n","      \n","      try:\n","        movieInfoUrl = driver.find_element_by_css_selector('li.info_lst \u003e ul \u003e li:nth-child(7) \u003e a').get_attribute('href')\n","      except:\n","        movieInfoUrl = driver.find_element_by_css_selector('li.info_lst \u003e ul \u003e li:nth-child(6) \u003e a').get_attribute('href')\n","\n","      #영화 상세보기 페이지 이동\n","      movie_req = requests.get(movieInfoUrl)\n","\n","      # 제목 수집\n","      movie_soup = BeautifulSoup(movie_req.text, 'lxml')\n","      title = movie_soup.head.find(\"meta\", {\"property\":\"og:title\"}).get('content')\n","      title_infos.append(title)\n","\n","      #줄거리 수집\n","      contents_texts = movie_soup.select('div.story_area \u003e p.con_tx')\n","\n","      if len(contents_texts) == 0:\n","        content_infos.append(\"줄거리 오류\")\n","\n","      else:\n","        for contents in contents_texts :\n","          # 줄거리 데이터 클랜징 작업\n","          temp = contents.text\n","          temp = temp.replace(\"\\r\",'')  # 줄바꿈 제거\n","          temp = temp.replace(\"\\xa0\",'') #공백 제거\n","          content_infos.append(temp)\n","    \n","    elif newflag =='':\n","      print('청불 영화로 데이터 수집하지 않습니다.')\n","  \n","  print('수집 완료 합니다.....')\n","  print(len(score_infos), len(genre_infos), len(content_infos))\n","  driver.close()\n","\n","  movie_dic = {\"제목\": title_infos, \"평점\":score_infos, \"장르\":genre_infos, \"줄거리\":content_infos}\n","\n","  #딕셔너리 -\u003e DataFrame\n","  movie_df = pd.DataFrame(movie_dic)\n","\n","  #수집된 정보 중에 중복 데이터 삭제\n","  movie_df2 = movie_df.drop_duplicates(\"줄거리\", keep='first') #줄거리 비교해서 중복된 영화를 삭제(첫번째 수집 영화만 남김)\n","\n","  return movie_df2\n"]},{"cell_type":"markdown","metadata":{"id":"V5MtPf4IKmZU"},"source":["CSV 파일로 저장"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"7hvHFJV64JoV"},"outputs":[],"source":["def dftoCsv(movie_df, num):\n","  try:\n","    movie_df.to_csv(('movie_my_data_' + str(num) + '.csv' ),\n","                    sep=',', na_rep='NaN', encoding='euc-kr')\n","    \n","  except:\n","    print('Error')  "]},{"cell_type":"markdown","metadata":{"id":"jfFictVpLbpn"},"source":["크롤링 실행"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_kHcI1mxLaac","outputId":"f8174c4b-1673-4f0e-d5ae-108dd1b6c8a1"},"outputs":[{"name":"stdout","output_type":"stream","text":["https://series.naver.com/movie/detail.nhn?productNo=6291892수집 중.........\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: DeprecationWarning: use driver.switch_to.window instead\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:22: DeprecationWarning: use driver.switch_to.window instead\n"]},{"name":"stdout","output_type":"stream","text":["9\n","https://series.naver.com/movie/detail.nhn?productNo=3400212수집 중.........\n","7\n","https://series.naver.com/movie/detail.nhn?productNo=2822635수집 중.........\n","청불 영화로 데이터 수집하지 않습니다.\n","https://series.naver.com/movie/detail.nhn?productNo=3024534수집 중.........\n","8\n","https://series.naver.com/movie/detail.nhn?productNo=6283368수집 중.........\n","6\n","https://series.naver.com/movie/detail.nhn?productNo=6023769수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=3400211수집 중.........\n","7\n","https://series.naver.com/movie/detail.nhn?productNo=3639460수집 중.........\n","청불 영화로 데이터 수집하지 않습니다.\n","https://series.naver.com/movie/detail.nhn?productNo=6243813수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=6119777수집 중.........\n","7\n","https://series.naver.com/movie/detail.nhn?productNo=6139375수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=6257268수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=6253746수집 중.........\n","8\n","https://series.naver.com/movie/detail.nhn?productNo=6158879수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=3293948수집 중.........\n","청불 영화로 데이터 수집하지 않습니다.\n","https://series.naver.com/movie/detail.nhn?productNo=4356726수집 중.........\n","9\n","https://series.naver.com/movie/detail.nhn?productNo=6176165수집 중.........\n","8\n","https://series.naver.com/movie/detail.nhn?productNo=2686058수집 중.........\n"]}],"source":["#1) 크롤링 할 링크 수집\n","links = getPageLinksWantRange(1,5)\n","\n","#2) 영화 상세 정보 수집\n","movie_df2 = getMovieDataFromNaverSeries(links)\n","\n","#3) csv 파일 저장\n","dftoCsv(movie_df2, len(movie_df2))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KsIdjkspMFi3"},"outputs":[],"source":[""]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNQSmml6B5btGgxrGMfr6x2","collapsed_sections":[],"name":"네이버 영화 TOP크롤링\u0026영화 데이터 분석 월간","provenance":[{"file_id":"1eVB-I_V0NopzTcWyRzNkPNyIbyGzMLsI","timestamp":1624445253617},{"file_id":"19GMLxHogbnC_ixELX1u-2l3BYz8aNLoH","timestamp":1624444983341},{"file_id":"1ew1iLjmQdnNwcsAkB1ogUe71nIoa2N2g","timestamp":1624443911126}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}